{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-12-01T04:55:33.874Z",
    "end": "2022-12-01T04:55:40.635Z",
    "duration": 6761,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2b4082c1-0799-484a-9343-441013d5de40",
      "title": "",
      "fullFile": "cypress\\e2e\\test\\sort\\sort.cy.js",
      "file": "cypress\\e2e\\test\\sort\\sort.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "1310e188-f173-4fab-a888-0ff999934be4",
          "title": "Sort",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should sort product list from A-Z",
              "fullTitle": "Sort should sort product list from A-Z",
              "timedOut": null,
              "duration": 1921,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_auth.default.login('standard_user', 'secret_sauce');\ncy.get('.product_sort_container').select('az');\nvar productList = ['Sauce Labs Backpack', 'Sauce Labs Bike Light', 'Sauce Labs Bolt T-Shirt', 'Sauce Labs Fleece Jacket', 'Sauce Labs Onesie', 'Test.allTheThings() T-Shirt (Red)'];\nproductList.sort();\ncy.get('.inventory_item_name').each(($elem, index) => {\n  expect($elem.text()).equal(productList[index]);\n});",
              "err": {},
              "uuid": "f22f2a0a-dd62-4b05-a3d7-655313da9389",
              "parentUUID": "1310e188-f173-4fab-a888-0ff999934be4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort product list from Z-A",
              "fullTitle": "Sort should sort product list from Z-A",
              "timedOut": null,
              "duration": 1414,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_auth.default.login('standard_user', 'secret_sauce');\ncy.get('.product_sort_container').select('za');\nvar productList = ['Sauce Labs Backpack', 'Sauce Labs Bike Light', 'Sauce Labs Bolt T-Shirt', 'Sauce Labs Fleece Jacket', 'Sauce Labs Onesie', 'Test.allTheThings() T-Shirt (Red)'];\nproductList.sort().reverse();\ncy.get('.inventory_item_name').each(($elem, index) => {\n  expect($elem.text()).equal(productList[index]);\n});",
              "err": {},
              "uuid": "841d4c9e-b90c-402d-80bf-c19839a3ec61",
              "parentUUID": "1310e188-f173-4fab-a888-0ff999934be4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort product list from low to high",
              "fullTitle": "Sort should sort product list from low to high",
              "timedOut": null,
              "duration": 1721,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_auth.default.login('standard_user', 'secret_sauce');\n_product.default.selectSort(_products.default.sort['Low to High']); // Sort data list based on price, from low to high\n\n_products.default.products.sort((a, b) => a.price - b.price);\ncy.get(_product.default.itemsPrice).each(($elem, index) => {\n  expect($elem.text()).equal(`$${_products.default.products[index].price}`);\n});",
              "err": {},
              "uuid": "5a553274-f879-4734-a316-02219efdc6be",
              "parentUUID": "1310e188-f173-4fab-a888-0ff999934be4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should sort product list from high to low",
              "fullTitle": "Sort should sort product list from high to low",
              "timedOut": null,
              "duration": 1484,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "_auth.default.login('standard_user', 'secret_sauce');\n_product.default.selectSort(_products.default.sort['High to Low']); // Sort data list based on price, from high to low\n\n_products.default.products.sort((a, b) => b.price - a.price); // Print the prices from the sorted list\n// ProductData.products.forEach(($elem, index)=>{\n//     cy.log($elem.price)\n// })\n\ncy.get(_product.default.itemsPrice).each(($elem, index) => {\n  expect($elem.text()).equal(`$${_products.default.products[index].price}`);\n});",
              "err": {},
              "uuid": "3d505c0c-e9c7-41f9-9d59-a1788afe9cc9",
              "parentUUID": "1310e188-f173-4fab-a888-0ff999934be4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f22f2a0a-dd62-4b05-a3d7-655313da9389",
            "841d4c9e-b90c-402d-80bf-c19839a3ec61",
            "5a553274-f879-4734-a316-02219efdc6be",
            "3d505c0c-e9c7-41f9-9d59-a1788afe9cc9"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6540,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}